{"version":3,"file":"static/webpack/static/development/pages/index.js.61c6724d2a9c6aa05fae.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React  from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ms from \"pretty-ms\";\nimport window from \"global\";\n\nclass Index extends React.Component {\n\n\n    startTimer() {\n        this.setState({\n            time: this.state.time,\n            start: Date.now() - this.state.time,\n            isOn: true\n        })\n        this.timer = setInterval(() => this.setState({\n          time: Date.now() - this.state.start\n        }), 1);\n      }\n\n\n      stopTimer() {\n        this.setState({isOn: false})\n        clearInterval(this.timer)\n      }\n\n      resetTimer() {\n        this.setState({time: 0})\n      }\n\n\n    setTime(){\n  \n        let currentdate = new Date();\n        let hours = currentdate.getUTCHours()+2    \n      \n          \n          if( hours >= 24 ){ hours -= 24; }\n          if( hours < 0   ){ hours += 12; }\n    \n          hours = hours + \"\";\n          if( hours.length == 1 ){ hours = \"0\" + hours; }\n    \n          \n          let minutes = currentdate.getUTCMinutes();\n    \n          \n          minutes = minutes + \"\";\n          if( minutes.length == 1 ){ minutes = \"0\" + minutes; }\n    \n          let seconds = currentdate.getUTCSeconds();\n          //console.log(hours, minutes, seconds)\n          this.setState({\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds,\n            time: 0,\n            start: 0,\n            isOn: false\n          });\n      }\n\n      componentWillMount(){\n        this.setTime();\n      }\n\n      componentDidMount(){\n     \n       this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n     }\n\n    \n     \n\n    render() {\n        \n\n        let start = (this.state.time == 0) ?\n      <Button onClick={this.startTimer}>start</Button> :\n      null\n    let stop = (this.state.isOn) ?\n      <Button onClick={this.stopTimer}>stop</Button> :\n      null\n    let reset = (this.state.time != 0 && !this.state.isOn) ?\n      <Button onClick={this.resetTimer}>reset</Button> :\n      null\n    let resume = (this.state.time != 0 && !this.state.isOn) ?\n      <Button onClick={this.startTimer}>resume</Button> :\n      null\n\n        return (<React.Fragment>\n            \n            <Button color=\"primary\"  >Timer Project</Button>\n            \n            \n            <div >\n                <label>Real - Time : </label>\n                <span style= {{\"textDecoration\":\"underline\"}} >{this.state.hours}:{this.state.minutes}:{this.state.seconds}</span>\n            </div>\n            \n\n            <h3>timer: {ms(this.state.time)}</h3>\n            {start}\n            {resume}\n            {stop}\n            {reset}\n        </React.Fragment>)\n    }\n}\n\n\n\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AADA;AAAA;AAGA;;;AAGA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAGA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;;;AAEA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;;;AAKA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAvGA;AACA;AA2GA;;;;A","sourceRoot":""}