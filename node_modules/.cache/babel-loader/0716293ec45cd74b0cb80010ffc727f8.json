{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/atharva/Documents/UPB/jobtest/pages/index.js\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Clock from 'react-live-clock';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"startTimer\",\n    value: function startTimer() {\n      var _this = this;\n\n      this.setState({\n        start: _Date$now() - this.state.time,\n        isOn: true,\n        clicks: 1\n      });\n      this.timer = setInterval(function () {\n        return _this.setState({\n          time: _Date$now() - _this.state.start\n        });\n      }, 1);\n    }\n  }, {\n    key: \"stopTimer\",\n    value: function stopTimer() {\n      this.setState({\n        isOn: false,\n        clicks: 1\n      });\n      clearInterval(this.timer);\n    }\n  }, {\n    key: \"resetTimer\",\n    value: function resetTimer() {\n      this.setState({\n        time: 0\n      });\n    }\n  }, {\n    key: \"lapTimer\",\n    value: function lapTimer() {\n      if (this.state.clicks <= 5) {\n        this.setState({\n          clicks: this.state.clicks + 1\n        });\n        localStorage.setItem(this.state.clicks, this.state.time);\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        time: 0,\n        start: 0,\n        isOn: false,\n        clicks: 1\n      });\n      this.startTimer = this.startTimer.bind(this);\n      this.stopTimer = this.stopTimer.bind(this);\n      this.resetTimer = this.resetTimer.bind(this);\n      this.lapTimer = this.lapTimer.bind(this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var start = this.state.time == 0 ? React.createElement(Button, {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"start\") : null;\n      var stop = this.state.isOn ? React.createElement(Button, {\n        onClick: this.stopTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"stop\") : null;\n      var reset = this.state.time != 0 && !this.state.isOn ? React.createElement(Button, {\n        onClick: this.resetTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"reset\") : null;\n      var resume = this.state.time != 0 && !this.state.isOn ? React.createElement(Button, {\n        onClick: this.startTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"resume\") : null;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Timer Project\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Real - Time : \"), React.createElement(Clock, {\n        format: 'HH:mm:ss',\n        ticking: true,\n        timezone: 'Europe/Berlin',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"timer: \", ms(this.state.time)), start, resume, stop, reset, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.lapTimer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Lap\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, localStorage.getItem(1)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, localStorage.getItem(2)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, localStorage.getItem(3)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, localStorage.getItem(4)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, localStorage.getItem(5)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/atharva/Documents/UPB/jobtest/pages/index.js"],"names":["React","Button","Clock","Index","setState","start","state","time","isOn","clicks","timer","setInterval","clearInterval","localStorage","setItem","startTimer","bind","stopTimer","resetTimer","lapTimer","stop","reset","resume","ms","getItem","Component"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Clock from 'react-live-clock';\n\nclass Index extends React.Component {\n\n\n    startTimer() {\n        this.setState({\n            start: Date.now() - this.state.time,\n            isOn: true,\n            clicks:1\n        })\n        this.timer = setInterval(() => this.setState({\n          time: Date.now() - this.state.start\n        }), 1);\n      }\n\n\n      stopTimer() {\n        this.setState({isOn: false,clicks:1})\n        clearInterval(this.timer)\n      }\n\n      resetTimer() {\n        this.setState({time: 0})\n      }\n\n      lapTimer() {\n        if(this.state.clicks<= 5) {\n           this.setState({clicks: this.state.clicks+1})\n           localStorage.setItem(this.state.clicks,this.state.time)\n        }\n      }\n\n      componentWillMount(){\n        \n      }\n\n      componentDidMount(){\n        this.setState({\n            time: 0,\n            start: 0,\n            isOn: false,\n            clicks:1,\n          });\n       this.startTimer = this.startTimer.bind(this)\n        this.stopTimer = this.stopTimer.bind(this)\n        this.resetTimer = this.resetTimer.bind(this)\n        this.lapTimer = this.lapTimer.bind(this)\n     }\n\n    \n     \n\n    render() {\n        \n\n        let start = (this.state.time == 0) ?\n      <Button onClick={this.startTimer}>start</Button> :\n      null\n    let stop = (this.state.isOn) ?\n      <Button onClick={this.stopTimer}>stop</Button> :\n      null\n    let reset = (this.state.time != 0 && !this.state.isOn) ?\n      <Button onClick={this.resetTimer}>reset</Button> :\n      null\n    let resume = (this.state.time != 0 && !this.state.isOn) ?\n      <Button onClick={this.startTimer}>resume</Button> :\n      null\n\n        return (<React.Fragment>\n            \n            <Button color=\"primary\"  >Timer Project</Button>\n            \n            \n            <div >\n                <label>Real - Time : </label>\n                <Clock format={'HH:mm:ss'} ticking={true} timezone={'Europe/Berlin'} />\n            </div>\n            \n\n            <h3>timer: {ms(this.state.time)}</h3>\n            {start}\n            {resume}\n            {stop}\n            {reset}\n            <Button color=\"primary\"  onClick={this.lapTimer}>Lap</Button>\n            <span>{localStorage.getItem(1)}</span><br/>\n            <span>{localStorage.getItem(2)}</span><br/>\n            <span>{localStorage.getItem(3)}</span><br/>\n            <span>{localStorage.getItem(4)}</span><br/>\n            <span>{localStorage.getItem(5)}</span><br/>\n        </React.Fragment>)\n    }\n}\n\n\n\nexport default Index"]},"metadata":{},"sourceType":"module"}