{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/atharva/Documents/UPB/jobtest/pages/index.js\";\nimport React from 'react';\nimport Clock from 'react-live-clock';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"setTime\",\n    value: function setTime() {\n      var currentdate = new Date();\n\n      var hours = currentdate.getUTCHours() + _parseInt(this.props.UTCOffset);\n\n      console.log(hours);\n\n      if (hours >= 24) {\n        hours -= 24;\n      }\n\n      if (hours < 0) {\n        hours += 12;\n      }\n\n      hours = hours + \"\";\n\n      if (hours.length == 1) {\n        hours = \"0\" + hours;\n      }\n\n      var minutes = currentdate.getUTCMinutes();\n      minutes = minutes + \"\";\n\n      if (minutes.length == 1) {\n        minutes = \"0\" + minutes;\n      }\n\n      var seconds = currentdate.getUTCSeconds(); //console.log(hours, minutes, seconds)\n\n      this.setState({\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setTime();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.setInterval(function () {\n        this.setTime();\n      }.bind(this), 1000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Clock, {\n        format: 'HH:mm:ss',\n        ticking: true,\n        timezone: 'US/Pacific',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Lap\"), React.createElement(Button, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Lap\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.hours, \":\", this.state.minutes, \":\", this.state.seconds)));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/atharva/Documents/UPB/jobtest/pages/index.js"],"names":["React","Clock","Button","Index","currentdate","Date","hours","getUTCHours","props","UTCOffset","console","log","length","minutes","getUTCMinutes","seconds","getUTCSeconds","setState","setTime","window","setInterval","bind","state","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,kCAAP;;IAEMC,K;;;;;;;;;;;;;8BACO;AAEL,UAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;;AACA,UAAIC,KAAK,GAAGF,WAAW,CAACG,WAAZ,KAA4B,UAAS,KAAKC,KAAL,CAAWC,SAApB,CAAxC;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AAEE,UAAIA,KAAK,IAAI,EAAb,EAAiB;AAAEA,QAAAA,KAAK,IAAI,EAAT;AAAc;;AACjC,UAAIA,KAAK,GAAG,CAAZ,EAAiB;AAAEA,QAAAA,KAAK,IAAI,EAAT;AAAc;;AAEjCA,MAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;;AACA,UAAIA,KAAK,CAACM,MAAN,IAAgB,CAApB,EAAuB;AAAEN,QAAAA,KAAK,GAAG,MAAMA,KAAd;AAAsB;;AAG/C,UAAIO,OAAO,GAAGT,WAAW,CAACU,aAAZ,EAAd;AAGAD,MAAAA,OAAO,GAAGA,OAAO,GAAG,EAApB;;AACA,UAAIA,OAAO,CAACD,MAAR,IAAkB,CAAtB,EAAyB;AAAEC,QAAAA,OAAO,GAAG,MAAMA,OAAhB;AAA0B;;AAErD,UAAIE,OAAO,GAAGX,WAAW,CAACY,aAAZ,EAAd,CAnBG,CAoBH;;AACA,WAAKC,QAAL,CAAc;AACZX,QAAAA,KAAK,EAAEA,KADK;AAEZO,QAAAA,OAAO,EAAEA,OAFG;AAGZE,QAAAA,OAAO,EAAEA;AAHG,OAAd;AAKH;;;yCAEmB;AAClB,WAAKG,OAAL;AACD;;;wCAEkB;AACjBC,MAAAA,MAAM,CAACC,WAAP,CAAmB,YAAY;AAC9B,aAAKF,OAAL;AACD,OAFmB,CAElBG,IAFkB,CAEb,IAFa,CAAnB,EAEa,IAFb;AAGF;;;6BAEO;AACL,aAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,UAAf;AAA2B,QAAA,OAAO,EAAE,IAApC;AAA0C,QAAA,QAAQ,EAAE,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,EACgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhE,EAEJ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFI,EAGJ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHI,EAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,KAAKC,KAAL,CAAWhB,KAAnB,OAA2B,KAAKgB,KAAL,CAAWT,OAAtC,OAAgD,KAAKS,KAAL,CAAWP,OAA3D,CADJ,CALI,CAAR;AAUH;;;;EAlDef,KAAK,CAACuB,S;;AAuD1B,eAAepB,KAAf","sourcesContent":["import React  from 'react';\nimport Clock from 'react-live-clock';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass Index extends React.Component {\n    setTime(){\n  \n        let currentdate = new Date();\n        let hours = currentdate.getUTCHours() + parseInt(this.props.UTCOffset);    \n        console.log(hours)\n          \n          if( hours >= 24 ){ hours -= 24; }\n          if( hours < 0   ){ hours += 12; }\n    \n          hours = hours + \"\";\n          if( hours.length == 1 ){ hours = \"0\" + hours; }\n    \n          \n          let minutes = currentdate.getUTCMinutes();\n    \n          \n          minutes = minutes + \"\";\n          if( minutes.length == 1 ){ minutes = \"0\" + minutes; }\n    \n          let seconds = currentdate.getUTCSeconds();\n          //console.log(hours, minutes, seconds)\n          this.setState({\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds\n          });\n      }\n\n      componentWillMount(){\n        this.setTime();\n      }\n\n      componentDidMount(){\n        window.setInterval(function () {\n         this.setTime();\n       }.bind(this), 1000);\n     }\n\n    render() {\n        return (<React.Fragment>\n            <Clock format={'HH:mm:ss'} ticking={true} timezone={'US/Pacific'} /><br/>\n            <Button color=\"primary\">Lap</Button>\n            <Button color=\"danger\">Lap</Button>\n\n            <div >\n                <span >{this.state.hours}:{this.state.minutes}:{this.state.seconds}</span>\n            </div>\n            \n        </React.Fragment>)\n    }\n}\n\n\n\nexport default Index"]},"metadata":{},"sourceType":"module"}