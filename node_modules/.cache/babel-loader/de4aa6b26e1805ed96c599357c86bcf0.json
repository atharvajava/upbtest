{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/atharva/Documents/UPB/jobtest/pages/index.js\";\nimport React from 'react';\nimport Clock from 'react-live-clock';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction Index() {\n  function setTime() {\n    var currentdate = new Date();\n\n    var hours = currentdate.getUTCHours() + _parseInt(this.props.UTCOffset); // correct for number over 24, and negatives\n\n\n    if (hours >= 24) {\n      hours -= 24;\n    }\n\n    if (hours < 0) {\n      hours += 12;\n    } // add leading zero, first convert hours to string\n\n\n    hours = hours + \"\";\n\n    if (hours.length == 1) {\n      hours = \"0\" + hours;\n    } // minutes are the same on every time zone\n\n\n    var minutes = currentdate.getUTCMinutes(); // add leading zero, first convert hours to string\n\n    minutes = minutes + \"\";\n\n    if (minutes.length == 1) {\n      minutes = \"0\" + minutes;\n    }\n\n    seconds = currentdate.getUTCSeconds();\n    console.log(hours, minutes, seconds);\n    this.setState({\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    });\n  }\n\n  setTime();\n  window.setInterval(function () {\n    this.setTime();\n  }.bind(this), 1000);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Clock, {\n    format: 'HH:mm:ss',\n    ticking: true,\n    timezone: 'US/Pacific',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Lap\"), React.createElement(Button, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Lap\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, this.state.hours, \":\", this.state.minutes, \":\", this.state.seconds)));\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/atharva/Documents/UPB/jobtest/pages/index.js"],"names":["React","Clock","Button","Index","setTime","currentdate","Date","hours","getUTCHours","props","UTCOffset","length","minutes","getUTCMinutes","seconds","getUTCSeconds","console","log","setState","window","setInterval","bind","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,kCAAP;;AAEA,SAASC,KAAT,GAAkB;AACd,WAASC,OAAT,GAAkB;AAEd,QAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAIC,KAAK,GAAGF,WAAW,CAACG,WAAZ,KAA4B,UAAS,KAAKC,KAAL,CAAWC,SAApB,CAAxC,CAHc,CAKZ;;;AACA,QAAIH,KAAK,IAAI,EAAb,EAAiB;AAAEA,MAAAA,KAAK,IAAI,EAAT;AAAc;;AACjC,QAAIA,KAAK,GAAG,CAAZ,EAAiB;AAAEA,MAAAA,KAAK,IAAI,EAAT;AAAc,KAPrB,CASZ;;;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;;AACA,QAAIA,KAAK,CAACI,MAAN,IAAgB,CAApB,EAAuB;AAAEJ,MAAAA,KAAK,GAAG,MAAMA,KAAd;AAAsB,KAXnC,CAaZ;;;AACA,QAAIK,OAAO,GAAGP,WAAW,CAACQ,aAAZ,EAAd,CAdY,CAgBZ;;AACAD,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAApB;;AACA,QAAIA,OAAO,CAACD,MAAR,IAAkB,CAAtB,EAAyB;AAAEC,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AAA0B;;AAErDE,IAAAA,OAAO,GAAGT,WAAW,CAACU,aAAZ,EAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBK,OAAnB,EAA4BE,OAA5B;AACA,SAAKI,QAAL,CAAc;AACZX,MAAAA,KAAK,EAAEA,KADK;AAEZK,MAAAA,OAAO,EAAEA,OAFG;AAGZE,MAAAA,OAAO,EAAEA;AAHG,KAAd;AAKH;;AAGFV,EAAAA,OAAO;AAIJe,EAAAA,MAAM,CAACC,WAAP,CAAmB,YAAY;AAC9B,SAAKhB,OAAL;AACD,GAFmB,CAElBiB,IAFkB,CAEb,IAFa,CAAnB,EAEa,IAFb;AAMA,SAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE,UAAf;AAA2B,IAAA,OAAO,EAAE,IAApC;AAA0C,IAAA,QAAQ,EAAE,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADI,EACgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhE,EAEJ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFI,EAGJ,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHI,EAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ,KAAKC,KAAL,CAAWf,KAAnB,OAA2B,KAAKe,KAAL,CAAWV,OAAtC,OAAgD,KAAKU,KAAL,CAAWR,OAA3D,CADJ,CALI,CAAR;AAWP;;AAID,eAAeX,KAAf","sourcesContent":["import React  from 'react';\nimport Clock from 'react-live-clock';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction Index()  {\n    function setTime(){\n  \n        var currentdate = new Date();\n        var hours = currentdate.getUTCHours() + parseInt(this.props.UTCOffset);    \n    \n          // correct for number over 24, and negatives\n          if( hours >= 24 ){ hours -= 24; }\n          if( hours < 0   ){ hours += 12; }\n    \n          // add leading zero, first convert hours to string\n          hours = hours + \"\";\n          if( hours.length == 1 ){ hours = \"0\" + hours; }\n    \n          // minutes are the same on every time zone\n          var minutes = currentdate.getUTCMinutes();\n    \n          // add leading zero, first convert hours to string\n          minutes = minutes + \"\";\n          if( minutes.length == 1 ){ minutes = \"0\" + minutes; }\n    \n          seconds = currentdate.getUTCSeconds();\n          console.log(hours, minutes, seconds)\n          this.setState({\n            hours: hours,\n            minutes: minutes,\n            seconds: seconds\n          });\n      }\n\n      \n     setTime();\n      \n\n      \n        window.setInterval(function () {\n         this.setTime();\n       }.bind(this), 1000);\n     \n\n   \n        return (<React.Fragment>\n            <Clock format={'HH:mm:ss'} ticking={true} timezone={'US/Pacific'} /><br/>\n            <Button color=\"primary\">Lap</Button>\n            <Button color=\"danger\">Lap</Button>\n\n            <div >\n                <span >{this.state.hours}:{this.state.minutes}:{this.state.seconds}</span>\n            </div>\n            \n        </React.Fragment>)\n    \n}\n\n\n\nexport default Index"]},"metadata":{},"sourceType":"module"}