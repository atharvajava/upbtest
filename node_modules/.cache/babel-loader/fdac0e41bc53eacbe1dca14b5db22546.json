{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nvar _jsxFileName = \"/Users/atharva/Documents/UPB/jobtest/pages/index.js\";\nimport React from 'react';\nimport Clock from 'react-live-clock';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nvar CityRow = React.createClass({\n  displayName: \"CityRow\",\n  setTime: function setTime() {\n    var currentdate = new Date();\n\n    var hours = currentdate.getUTCHours() + _parseInt(this.props.UTCOffset); // correct for number over 24, and negatives\n\n\n    if (hours >= 24) {\n      hours -= 24;\n    }\n\n    if (hours < 0) {\n      hours += 12;\n    } // add leading zero, first convert hours to string\n\n\n    hours = hours + \"\";\n\n    if (hours.length == 1) {\n      hours = \"0\" + hours;\n    } // minutes are the same on every time zone\n\n\n    var minutes = currentdate.getUTCMinutes(); // add leading zero, first convert hours to string\n\n    minutes = minutes + \"\";\n\n    if (minutes.length == 1) {\n      minutes = \"0\" + minutes;\n    }\n\n    seconds = currentdate.getUTCSeconds();\n    console.log(hours, minutes, seconds);\n    this.setState({\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    });\n  },\n  componentWillMount: function componentWillMount() {\n    this.setTime();\n  },\n  componentDidMount: function componentDidMount() {\n    window.setInterval(function () {\n      this.setTime();\n    }.bind(this), 1000);\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      className: \"city-row\",\n      ref: \"cityRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"city-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.hours, \":\", this.state.minutes, \":\", this.state.seconds));\n  }\n});\n\nvar Index =\n/*#__PURE__*/\nfunction () {\n  function Index() {\n    _classCallCheck(this, Index);\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Clock, {\n        format: 'HH:mm:ss',\n        ticking: true,\n        timezone: 'US/Pacific',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Lap\"), React.createElement(Button, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Lap\"));\n    }\n  }]);\n\n  return Index;\n}();\n\nexport default Index;","map":{"version":3,"sources":["/Users/atharva/Documents/UPB/jobtest/pages/index.js"],"names":["React","Clock","Button","CityRow","createClass","setTime","currentdate","Date","hours","getUTCHours","props","UTCOffset","length","minutes","getUTCMinutes","seconds","getUTCSeconds","console","log","setState","componentWillMount","componentDidMount","window","setInterval","bind","render","state","Index"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,kCAAP;AAKA,IAAIC,OAAO,GAAGH,KAAK,CAACI,WAAN,CAAkB;AAAA;AAC5BC,EAAAA,OAAO,EAAE,mBAAU;AAEjB,QAAIC,WAAW,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAIC,KAAK,GAAGF,WAAW,CAACG,WAAZ,KAA4B,UAAS,KAAKC,KAAL,CAAWC,SAApB,CAAxC,CAHiB,CAKf;;;AACA,QAAIH,KAAK,IAAI,EAAb,EAAiB;AAAEA,MAAAA,KAAK,IAAI,EAAT;AAAc;;AACjC,QAAIA,KAAK,GAAG,CAAZ,EAAiB;AAAEA,MAAAA,KAAK,IAAI,EAAT;AAAc,KAPlB,CASf;;;AACAA,IAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;;AACA,QAAIA,KAAK,CAACI,MAAN,IAAgB,CAApB,EAAuB;AAAEJ,MAAAA,KAAK,GAAG,MAAMA,KAAd;AAAsB,KAXhC,CAaf;;;AACA,QAAIK,OAAO,GAAGP,WAAW,CAACQ,aAAZ,EAAd,CAde,CAgBf;;AACAD,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAApB;;AACA,QAAIA,OAAO,CAACD,MAAR,IAAkB,CAAtB,EAAyB;AAAEC,MAAAA,OAAO,GAAG,MAAMA,OAAhB;AAA0B;;AAErDE,IAAAA,OAAO,GAAGT,WAAW,CAACU,aAAZ,EAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBK,OAAnB,EAA4BE,OAA5B;AACA,SAAKI,QAAL,CAAc;AACZX,MAAAA,KAAK,EAAEA,KADK;AAEZK,MAAAA,OAAO,EAAEA,OAFG;AAGZE,MAAAA,OAAO,EAAEA;AAHG,KAAd;AAKH,GA5B2B;AA6B5BK,EAAAA,kBAAkB,EAAE,8BAAU;AAC5B,SAAKf,OAAL;AACD,GA/B2B;AAgC5BgB,EAAAA,iBAAiB,EAAE,6BAAU;AAC1BC,IAAAA,MAAM,CAACC,WAAP,CAAmB,YAAY;AAC9B,WAAKlB,OAAL;AACD,KAFmB,CAElBmB,IAFkB,CAEb,IAFa,CAAnB,EAEa,IAFb;AAGF,GApC2B;AAqC5BC,EAAAA,MAAM,EAAE,kBAAW;AAEjB,WACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKC,KAAL,CAAWlB,KAAxC,OAAgD,KAAKkB,KAAL,CAAWb,OAA3D,OAAqE,KAAKa,KAAL,CAAWX,OAAhF,CADF,CADF;AAKD;AA5C2B,CAAlB,CAAd;;IA+CMY,K;;;;;;;;;6BACO;AACL,aAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,UAAf;AAA2B,QAAA,OAAO,EAAE,IAApC;AAA0C,QAAA,QAAQ,EAAE,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,EACgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhE,EAEJ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFI,EAGJ,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHI,CAAR;AAMH;;;;;;AAGL,eAAeA,KAAf","sourcesContent":["import React  from 'react';\nimport Clock from 'react-live-clock';\nimport { Button } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\n \n\n\n\nvar CityRow = React.createClass({\n    setTime: function(){\n  \n      var currentdate = new Date();\n      var hours = currentdate.getUTCHours() + parseInt(this.props.UTCOffset);    \n  \n        // correct for number over 24, and negatives\n        if( hours >= 24 ){ hours -= 24; }\n        if( hours < 0   ){ hours += 12; }\n  \n        // add leading zero, first convert hours to string\n        hours = hours + \"\";\n        if( hours.length == 1 ){ hours = \"0\" + hours; }\n  \n        // minutes are the same on every time zone\n        var minutes = currentdate.getUTCMinutes();\n  \n        // add leading zero, first convert hours to string\n        minutes = minutes + \"\";\n        if( minutes.length == 1 ){ minutes = \"0\" + minutes; }\n  \n        seconds = currentdate.getUTCSeconds();\n        console.log(hours, minutes, seconds)\n        this.setState({\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        });\n    },\n    componentWillMount: function(){\n      this.setTime();\n    },\n    componentDidMount: function(){\n       window.setInterval(function () {\n        this.setTime();\n      }.bind(this), 1000);\n    },\n    render: function() {\n  \n      return(\n        <div className=\"city-row\" ref=\"cityRow\">\n          <span className=\"city-time\">{this.state.hours}:{this.state.minutes}:{this.state.seconds}</span>\n        </div>\n      )\n    }\n  });\n\nclass Index {\n    render() {\n        return (<React.Fragment>\n            <Clock format={'HH:mm:ss'} ticking={true} timezone={'US/Pacific'} /><br/>\n            <Button color=\"primary\">Lap</Button>\n            <Button color=\"danger\">Lap</Button>\n            \n        </React.Fragment>)\n    }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}